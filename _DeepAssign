// 深度 合并
export const _DeepAssign = function(...args) {
  if (args.some(a => !isObj(a) && isTrue(a))) {
    throw new Error('all args must be a Object')
  }
  if (!args[0]) throw new Error('target must be a Object')
  return args.reduce(mergeObj)
}

export function mergeObj(a, b) {
  isObj(a) && isObj(b) && Object.keys(b).forEach(k => {
    if (isObj(a[k]) && isObj(b[k])) {
      mergeObj(a[k], b[k])
    } else {
      a[k] = b[k]
    }
  })
  return a
}

export function isObj(target) {
  return target !== null && typeof target === 'object'
}

export function isTrue(target) {
  return target !== null && target !== undefined && target !== ''
}
